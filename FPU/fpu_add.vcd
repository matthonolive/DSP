$date
	Wed Feb 05 14:53:49 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_fpu_add $end
$var wire 1 ! exception $end
$var wire 32 " result [31:0] $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$scope module dut $end
$var wire 32 % a [31:0] $end
$var wire 32 & b [31:0] $end
$var wire 1 ! exception $end
$var wire 1 ' sign_b $end
$var wire 1 ( sign_a $end
$var wire 32 ) result [31:0] $end
$var wire 24 * frac_b [23:0] $end
$var wire 24 + frac_a [23:0] $end
$var wire 8 , exp_b [7:0] $end
$var wire 1 - exp_a_gt_exp_b $end
$var wire 8 . exp_a [7:0] $end
$var parameter 32 / double $end
$var parameter 32 0 exponent $end
$var parameter 32 1 mantissa $end
$var parameter 32 2 size $end
$var reg 25 3 aligned_frac_a [24:0] $end
$var reg 25 4 aligned_frac_b [24:0] $end
$var reg 8 5 exp_diff [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 2
b10111 1
b1000 0
b0 /
$end
#0
$dumpvars
bx 5
bx 4
bx 3
bx .
x-
bx ,
b1xxxxxxxxxxxxxxxxxxxxxxx +
b1xxxxxxxxxxxxxxxxxxxxxxx *
b0xxxxxxxx )
x(
x'
bx &
bx %
bx $
bx #
b0xxxxxxxx "
z!
$end
#5000
b11000000000000000000 4
b110000000000000000000000 3
b100 "
b100 )
b100 5
0'
1-
b1 ,
b110000000000000000000000 *
0(
b101 .
b110000000000000000000000 +
b110000000000000000000000 $
b110000000000000000000000 &
b10110000000000000000000000 #
b10110000000000000000000000 %
#15000
